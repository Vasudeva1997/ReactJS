{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","entered","setEntered","Fragment","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","error","status","useEffect","push","quote"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,kGCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCiE/BC,EA7DG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAA8BE,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAYA,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,IAAD,CACEC,MAAkB,IAAZH,EACNI,QAAS,SAACC,GACR,MAAM,oFAGV,cAAC,EAAD,UACE,uBACEC,QAAS,WACPL,GAAW,IAEbV,UAAWC,IAAQe,KACnBC,SAxBR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBf,EAAegB,QAAQC,MACvCC,EAAchB,EAAac,QAAQC,MAGzCvB,EAAMyB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAY5C,UAOGxB,EAAM4B,WACL,qBAAK3B,UAAWC,IAAQ2B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK7B,OAEtC,sBAAKL,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK3B,OAEpC,qBAAKP,UAAWC,IAAQmC,QAAxB,SACE,wBACEC,QAAS,WACP3B,GAAW,IAEbV,UAAU,MAJZ,kC,gBC5BGsC,UAnBE,SAACvC,GAChB,IAAMwC,EAAUC,cAChB,EAAuCC,YAAQC,KAAvCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,OAC5BC,qBAAU,WACO,cAAXD,GAA2BD,GAC7BL,EAAQQ,KAAK,aAEd,CAACF,EAAQN,EAAQK,IAIpB,OACE,eAAC,IAAMjC,SAAP,WACGiC,GAAS,qBAAK5C,UAAU,WAAf,SAA2B4C,IACrC,cAAC,EAAD,CAAWpB,WANI,SAACwB,GAClBL,EAAYK,IAKyBpB,SAAS","file":"static/js/6.fc5f545b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__DvCOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3bsOD\",\"loading\":\"QuoteForm_loading__2fTCj\",\"control\":\"QuoteForm_control__N8kKI\",\"actions\":\"QuoteForm_actions__3cblr\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [entered, setEntered] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <React.Fragment>\n      <Prompt\n        when={entered === true}\n        message={(location) => {\n          return `React App says that data is not saved. Are you sure that you want to continue?`;\n        }}\n      />\n      <Card>\n        <form\n          onFocus={() => {\n            setEntered(true);\n          }}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button\n              onClick={() => {\n                setEntered(false);\n              }}\n              className=\"btn\"\n            >\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuote = (props) => {\r\n  const history = useHistory();\r\n  const { sendRequest, error, status } = useHttp(addQuote);\r\n  useEffect(() => {\r\n    if (status === \"completed\" && !error ) {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history,error]);\r\n  const onAddQuote = (quote) => {\r\n    sendRequest(quote);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {error && <div className=\"centered\">{error}</div>}\r\n      <QuoteForm onAddQuote={onAddQuote} loading={false} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}